const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function restoreCorrectUsers() {
  try {
    console.log('üîß RESTAURANDO USU√ÅRIOS CORRETOS')
    console.log('============================================')
    
    // Primeiro, remover todos os usu√°rios existentes
    console.log('üóëÔ∏è  Removendo usu√°rios existentes...')
    await prisma.user.deleteMany({})
    console.log('‚úÖ Usu√°rios existentes removidos')
    
    // Hash das senhas
    const doctorPasswordHash = await bcrypt.hash('Logos 1.1', 12)
    const secretaryPasswordHash = await bcrypt.hash('zeta123', 12)
    
    // Criar o m√©dico correto
    console.log('üë®‚Äç‚öïÔ∏è Criando m√©dico: joao.viana...')
    const doctor = await prisma.user.create({
      data: {
        username: 'joao.viana',
        email: 'joaovitorvianacoloprocto@gmail.com',
        password: doctorPasswordHash,
        role: 'DOCTOR',
        name: 'Dr. Jo√£o Vitor Viana',
        crm: '12831',
        specialties: 'Coloproctologia',
        isActive: true
      }
    })
    console.log(`‚úÖ M√©dico criado: ${doctor.username} - ${doctor.name}`)
    
    // Criar a secret√°ria correta
    console.log('üë©‚Äçüíº Criando secret√°ria: zeta.secretaria...')
    const secretary = await prisma.user.create({
      data: {
        username: 'zeta.secretaria',
        email: 'secretaria@clinica.com',
        password: secretaryPasswordHash,
        role: 'SECRETARY',
        name: 'Secret√°ria Zeta',
        isActive: true
      }
    })
    console.log(`‚úÖ Secret√°ria criada: ${secretary.username} - ${secretary.name}`)
    
    console.log('\nüéâ USU√ÅRIOS CORRETOS RESTAURADOS COM SUCESSO!')
    console.log('============================================')
    console.log('üìã CREDENCIAIS DE ACESSO:')
    console.log(`üë®‚Äç‚öïÔ∏è M√©dico: ${doctor.username} / Logos 1.1`)
    console.log(`   Email: ${doctor.email}`)
    console.log(`   CRM: ${doctor.crm} (Para√≠ba)`)
    console.log(`üë©‚Äçüíº Secret√°ria: ${secretary.username} / zeta123`)
    console.log(`   Email: ${secretary.email}`)
    
  } catch (error) {
    console.error('‚ùå Erro ao restaurar usu√°rios corretos:', error)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

restoreCorrectUsers()
  .then(() => {
    console.log('\n‚úÖ Script executado com sucesso!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('‚ùå Falha na execu√ß√£o do script:', error)
    process.exit(1)
  })